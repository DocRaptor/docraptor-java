/*
 * DocRaptor
 * A native client library for the DocRaptor HTML to PDF/XLS service.
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docraptor;

import com.docraptor.ApiException;
import com.docraptor.AsyncDoc;
import com.docraptor.Doc;
import com.docraptor.DocStatus;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DocApi
 */
public class DocApiTest {

    private final DocApi api = new DocApi();

    /**
     * Creates a document asynchronously. You must use a callback url or the returned status id and the status API to find out when it completes. Then use the download API to get the document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAsyncDocTest() throws ApiException {
        //
        //Doc doc = null;
        //
        //AsyncDoc response = api.createAsyncDoc(doc);

        // TODO: test validations
    }
    /**
     * Creates a document synchronously.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDocTest() throws ApiException {
        //
        //Doc doc = null;
        //
        //byte[] response = api.createDoc(doc);

        // TODO: test validations
    }
    /**
     * Creates a hosted document asynchronously. You must use a callback url or the returned status id and the status API to find out when it completes. Then use the download API to get the document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createHostedAsyncDocTest() throws ApiException {
        //
        //Doc doc = null;
        //
        //AsyncDoc response = api.createHostedAsyncDoc(doc);

        // TODO: test validations
    }
    /**
     * Creates a hosted document synchronously.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createHostedDocTest() throws ApiException {
        //
        //Doc doc = null;
        //
        //DocStatus response = api.createHostedDoc(doc);

        // TODO: test validations
    }
    /**
     * Expires a previously created hosted doc.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void expireTest() throws ApiException {
        //
        //String id = null;
        //
        //api.expire(id);

        // TODO: test validations
    }
    /**
     * Downloads a finished document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAsyncDocTest() throws ApiException {
        //
        //String id = null;
        //
        //byte[] response = api.getAsyncDoc(id);

        // TODO: test validations
    }
    /**
     * Check on the status of an asynchronously created document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAsyncDocStatusTest() throws ApiException {
        //
        //String id = null;
        //
        //DocStatus response = api.getAsyncDocStatus(id);

        // TODO: test validations
    }
}
