/*
 * DocRaptor
 * A native client library for the DocRaptor HTML to PDF/XLS service.
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docraptor;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for PrinceOptions
 */
public class PrinceOptionsTest {
    private final PrinceOptions model = new PrinceOptions();

    /**
     * Model tests for PrinceOptions
     */
    @Test
    public void testPrinceOptions() {
        // TODO: test PrinceOptions
    }

    /**
     * Test the property 'baseurl'
     */
    @Test
    public void baseurlTest() {
        // TODO: test baseurl
    }

    /**
     * Test the property 'noXinclude'
     */
    @Test
    public void noXincludeTest() {
        // TODO: test noXinclude
    }

    /**
     * Test the property 'noNetwork'
     */
    @Test
    public void noNetworkTest() {
        // TODO: test noNetwork
    }

    /**
     * Test the property 'noParallelDownloads'
     */
    @Test
    public void noParallelDownloadsTest() {
        // TODO: test noParallelDownloads
    }

    /**
     * Test the property 'httpUser'
     */
    @Test
    public void httpUserTest() {
        // TODO: test httpUser
    }

    /**
     * Test the property 'httpPassword'
     */
    @Test
    public void httpPasswordTest() {
        // TODO: test httpPassword
    }

    /**
     * Test the property 'httpProxy'
     */
    @Test
    public void httpProxyTest() {
        // TODO: test httpProxy
    }

    /**
     * Test the property 'httpTimeout'
     */
    @Test
    public void httpTimeoutTest() {
        // TODO: test httpTimeout
    }

    /**
     * Test the property 'insecure'
     */
    @Test
    public void insecureTest() {
        // TODO: test insecure
    }

    /**
     * Test the property 'media'
     */
    @Test
    public void mediaTest() {
        // TODO: test media
    }

    /**
     * Test the property 'noAuthorStyle'
     */
    @Test
    public void noAuthorStyleTest() {
        // TODO: test noAuthorStyle
    }

    /**
     * Test the property 'noDefaultStyle'
     */
    @Test
    public void noDefaultStyleTest() {
        // TODO: test noDefaultStyle
    }

    /**
     * Test the property 'noEmbedFonts'
     */
    @Test
    public void noEmbedFontsTest() {
        // TODO: test noEmbedFonts
    }

    /**
     * Test the property 'noSubsetFonts'
     */
    @Test
    public void noSubsetFontsTest() {
        // TODO: test noSubsetFonts
    }

    /**
     * Test the property 'noCompress'
     */
    @Test
    public void noCompressTest() {
        // TODO: test noCompress
    }

    /**
     * Test the property 'encrypt'
     */
    @Test
    public void encryptTest() {
        // TODO: test encrypt
    }

    /**
     * Test the property 'keyBits'
     */
    @Test
    public void keyBitsTest() {
        // TODO: test keyBits
    }

    /**
     * Test the property 'userPassword'
     */
    @Test
    public void userPasswordTest() {
        // TODO: test userPassword
    }

    /**
     * Test the property 'ownerPassword'
     */
    @Test
    public void ownerPasswordTest() {
        // TODO: test ownerPassword
    }

    /**
     * Test the property 'disallowPrint'
     */
    @Test
    public void disallowPrintTest() {
        // TODO: test disallowPrint
    }

    /**
     * Test the property 'disallowCopy'
     */
    @Test
    public void disallowCopyTest() {
        // TODO: test disallowCopy
    }

    /**
     * Test the property 'disallowAnnotate'
     */
    @Test
    public void disallowAnnotateTest() {
        // TODO: test disallowAnnotate
    }

    /**
     * Test the property 'disallowModify'
     */
    @Test
    public void disallowModifyTest() {
        // TODO: test disallowModify
    }

    /**
     * Test the property 'debug'
     */
    @Test
    public void debugTest() {
        // TODO: test debug
    }

    /**
     * Test the property 'input'
     */
    @Test
    public void inputTest() {
        // TODO: test input
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'javascript'
     */
    @Test
    public void javascriptTest() {
        // TODO: test javascript
    }

    /**
     * Test the property 'cssDpi'
     */
    @Test
    public void cssDpiTest() {
        // TODO: test cssDpi
    }

    /**
     * Test the property 'profile'
     */
    @Test
    public void profileTest() {
        // TODO: test profile
    }

    /**
     * Test the property 'pdfTitle'
     */
    @Test
    public void pdfTitleTest() {
        // TODO: test pdfTitle
    }

    /**
     * Test the property 'iframes'
     */
    @Test
    public void iframesTest() {
        // TODO: test iframes
    }

    /**
     * Test the property 'pageMargin'
     */
    @Test
    public void pageMarginTest() {
        // TODO: test pageMargin
    }

    /**
     * Test the property 'pdfForms'
     */
    @Test
    public void pdfFormsTest() {
        // TODO: test pdfForms
    }

}
